version: '3.8'

services:
  telegram-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram-gemini-bot
    restart: unless-stopped
    environment:
      # Required environment variables (set in .env file)
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      
      # Optional environment variables
      - TOGETHER_API_KEY=${TOGETHER_API_KEY:-}
      - WEBHOOK_URL=${WEBHOOK_URL:-}
      
      # Bot configuration
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-10}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60}
      - MAX_CONVERSATION_LENGTH=${MAX_CONVERSATION_LENGTH:-20}
      
      # Gemini AI configuration
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-2.5-flash}
      - GEMINI_TEMPERATURE=${GEMINI_TEMPERATURE:-0.7}
      - GEMINI_MAX_TOKENS=${GEMINI_MAX_TOKENS:-1000}
      
      # Together AI configuration
      - TOGETHER_DEFAULT_MODEL=${TOGETHER_DEFAULT_MODEL:-meta-llama/Llama-2-70b-chat-hf}
      - TOGETHER_TEMPERATURE=${TOGETHER_TEMPERATURE:-0.7}
      - TOGETHER_MAX_TOKENS=${TOGETHER_MAX_TOKENS:-1000}
    
    ports:
      - "5000:5000"  # For webhook mode
    
    volumes:
      - ./logs:/app/logs  # Mount logs directory
    
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: Add a webhook mode service
  telegram-bot-webhook:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telegram-gemini-bot-webhook
    restart: unless-stopped
    command: ["python", "webhook_main.py"]
    environment:
      # Required environment variables
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - WEBHOOK_URL=${WEBHOOK_URL}
      
      # Optional environment variables  
      - TOGETHER_API_KEY=${TOGETHER_API_KEY:-}
      
      # Bot configuration
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-10}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60}
      - MAX_CONVERSATION_LENGTH=${MAX_CONVERSATION_LENGTH:-20}
      
      # AI configuration
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-2.5-flash}
      - GEMINI_TEMPERATURE=${GEMINI_TEMPERATURE:-0.7}
      - GEMINI_MAX_TOKENS=${GEMINI_MAX_TOKENS:-1000}
      - TOGETHER_DEFAULT_MODEL=${TOGETHER_DEFAULT_MODEL:-meta-llama/Llama-2-70b-chat-hf}
      - TOGETHER_TEMPERATURE=${TOGETHER_TEMPERATURE:-0.7}
      - TOGETHER_MAX_TOKENS=${TOGETHER_MAX_TOKENS:-1000}
      - PORT=${PORT:-5000}
    
    ports:
      - "5001:5000"  # Different port to avoid conflicts
    
    volumes:
      - ./logs:/app/logs
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Only run webhook service if WEBHOOK_URL is set
    profiles:
      - webhook

# Networks
networks:
  default:
    name: telegram-bot-network

# Volumes
volumes:
  logs:
    driver: local